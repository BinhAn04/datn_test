@model AppData.ViewModel.HoaDonChiTietViewModel

@{
    ViewData["Title"] = "Chi Tiết Hóa Đơn";
    Layout = "~/Areas/Client/Views/Shared/_Tttk.cshtml";
}
<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f4f7fa;
        color: #333;
    }

    .content-wrapper {
        padding: 20px;
    }

    h1, h4 {
        color: #495057;
        margin-bottom: 15px;
    }

    .timeline {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 20px 0;
        flex-wrap: wrap;
    }

    .timeline-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 18%;
        margin: 10px;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 15px;
        transition: transform 0.2s;
    }

        .timeline-item:hover {
            transform: translateY(-5px);
        }

    .timeline-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #FF9F55;
        margin-bottom: 10px;
    }

        .timeline-icon img {
            max-width: 28px;
            max-height: 28px;
        }

    .timeline-content {
        text-align: center;
    }

        .timeline-content h3 {
            font-size: 16px;
            margin-bottom: 5px;
            font-weight: 600;
        }

        .timeline-content p {
            font-size: 14px;
            color: #6c757d;
        }

    .table {
        margin-top: 20px;
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 12px;
            text-align: left;
            border: 1px solid #dee2e6;
        }

        .table th {
            background-color: #007bff;
            color: white;
        }

        .table td {
            background-color: #fff;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1;
        }

    .btn {
        margin-top: 20px;
    }

    .details-card {
        background: #fff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    dt {
        font-weight: 600;
    }

    dd {
        margin-bottom: 10px;
    }

    .details-card {
        background-color: #f8f9fa; /* Màu nền nhẹ */
        border: 1px solid #dee2e6; /* Đường viền */
        border-radius: 0.25rem; /* Bo góc */
        padding: 1rem; /* Khoảng cách bên trong */
        margin: 1rem 0; /* Khoảng cách bên ngoài */
    }

    dt {
        font-weight: bold; /* Chữ đậm cho tiêu đề */
        color: #343a40; /* Màu chữ tối */
    }

    dd {
        margin-bottom: 0.5rem; /* Khoảng cách giữa các mục */
        color: #495057; /* Màu chữ nhạt hơn */
    }

    hr {
        border: 0; /* Ẩn đường viền mặc định */
        height: 1px; /* Chiều cao đường viền */
        background: #dee2e6; /* Màu đường viền */
        margin: 1rem 0; /* Khoảng cách cho đường viền */
    }

</style>

<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="fw-bold py-3 mb-4">
            <span class="text-muted fw-light">Quản lý sản phẩm /</span> Chi Tiết Hóa Đơn
        </h4>

        <div class="row">
            <div class="col-md-12">
                <h4>Lịch sử đơn hàng</h4>
                <div class="timeline">
                    @if (Model.LichSuHoaDons != null && Model.LichSuHoaDons.Any())
                    {
                        var sortedItems = Model.LichSuHoaDons.OrderBy(item => item.NgayTao);
                        foreach (var item in sortedItems)
                        {
                            <div class="timeline-item">
                                <div class="timeline-icon">
                                    @switch (item.ThaoTac)
                                    {
                                        case "Đã Hủy":
                                            <i class="fas fa-times-circle" style="color: darkred;" title="Đã Hủy"></i>
                                            break;
                                        case "Tạo Đơn Hàng":
                                            <i class="fas fa-clock" style="color: aqua;" title="Tạo Đơn Hàng"></i>
                                            break;
                                        case "Chờ Xác Nhận":
                                            <i class="fas fa-clock" style="color: orange;" title="Chờ xác nhận"></i>
                                            break;
                                        case "Chờ Giao Hàng":
                                            <i class="fas fa-hourglass-start" style="color: #ffcc00;" title="Chờ giao hàng"></i>
                                            break;
                                        case "Đang Vận Chuyển":
                                            <i class="fas fa-shipping-fast" style="color: #007bff;" title="Đang vận chuyển"></i>
                                            break;
                                        case "Đã Thanh Toán":
                                            <i class="fas fa-money-check-alt" style="color: green;" title="Đã thanh toán"></i>
                                            break;
                                        case "Đã Giao Hàng":
                                            <i class="fas fa-box-open" style="color: mediumseagreen;" title="Đã giao hàng"></i>
                                            break;
                                        case "Hoàn Thành":
                                            <i class="fas fa-flag-checkered" style="color: forestgreen;" title="Hoàn thành"></i>
                                            break;
                                        default:
                                            <i class="fas fa-question-circle" style="color: gray;" title="Trạng thái không xác định"></i>
                                            break;
                                    }
                                </div>
                                <div class="timeline-content">
                                    <h3>@item.ThaoTac</h3>
                                    <p>@item.NgayTao.ToString("dd-MM-yyyy HH:mm:ss")</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div>No history available.</div>
                    }
                </div>

             
            </div>
        </div>

        <h4>Thông tin Đơn Hàng</h4>
        <div class="details-card">
            <strong>Mã Đơn:</strong> @Model.HoaDon?.MaDon<br />
            <strong>Khách Hàng:</strong> @Model.HoaDon?.KhachHang <br />
            <strong>Trạng Thái:</strong> @Model.HoaDon?.TrangThai <br />
            <strong>Số Điện Thoại:</strong> @Model.HoaDon?.SoDienThoaiNguoiNhan <br />
            <strong>Loại Hóa Đơn:</strong> @Model.HoaDon?.LoaiHoaDon<br />
            <strong>Địa Chỉ Giao Hàng:</strong> @Model.HoaDon?.DiaChiGiaoHang <br />
           
        </div>

        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="mb-0">Lịch sử thanh toán</h4>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Ngày</th>
                    <th>Số Tiền</th>
                    <th>Loại Giao Dịch</th>
                    <th>Hình Thức Thanh Toán</th>
                    <th>Người Xác Nhận</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.LichSuHoaDons != null && Model.LichSuThanhToans.Any())
                {
                    foreach (var payment in Model.LichSuThanhToans)
                    {
                        <tr>
                            <td>@payment.NgayThanhToan.ToString("dd-MM-yyyy HH:mm:ss")</td>
                            <td>@payment.SoTien.ToString("N0")</td>
                            <td>@payment.LoaiGiaoDich</td>
                            <td>@payment.HinhThucThanhToan</td>
                            <td>@payment.NguoiThaoTac</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">Không có lịch sử thanh toán nào.</td>
                    </tr>
                }
            </tbody>
        </table>

        <h4>Danh Sách Sản Phẩm</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Tên Sản Phẩm</th>
                    <th>Số Lượng</th>
                    <th>Giá</th>
                    <th>Hình Ảnh</th>
                    <th>Màu Sắc</th>
                    <th>Kích Cỡ</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.SanPhamChiTiets != null && Model.SanPhamChiTiets.Any())
                {
                    foreach (var sanPham in Model.SanPhamChiTiets)
                    {
                        <tr>
                            <td>@sanPham.ProductName</td>
                            <td>@sanPham.Quantity</td>
                            <td>
                                @if (sanPham.GiaDaGiam.HasValue && sanPham.GiaDaGiam < sanPham.Price)
                                {
                                    <span style="text-decoration: line-through; color: red;">@sanPham.Price.ToString("N0")</span>
                                    <span style="color: green; font-weight: bold;">@sanPham.GiaDaGiam.Value.ToString("N0")</span>
                                }
                                else
                                {
                                    @sanPham.Price.ToString("N0")
                                }
                            </td>
                            <td>
                                <div style="position: relative;">
                                    @if (sanPham.HinhAnhs != null && sanPham.HinhAnhs.Any())
                                    {
                                        var hinhAnh = sanPham.HinhAnhs.First();
                                        var base64String = Convert.ToBase64String(hinhAnh.DataHinhAnh);
                                        var imageUrl = $"data:{hinhAnh.LoaiFileHinhAnh};base64,{base64String}";
                                        <img src="@imageUrl" alt="Hình ảnh sản phẩm" style="width: 50px; height: auto;" />
                                    }
                                    else
                                    {
                                        <span>Không có hình ảnh</span>
                                    }

                                    @if (sanPham.PhanTramGiam.HasValue)
                                    {
                                        <span style="position: absolute; top: 0; right: 0; color: red; font-weight: bold;">
                                            Giảm @sanPham.PhanTramGiam %
                                        </span>
                                    }
                                </div>
                            </td>
                            <td>
                                @if (sanPham.MauSac != null && sanPham.MauSac.Any())
                                {
                                    @string.Join(", ", sanPham.MauSac)
                                }
                                else
                                {
                                    <span>Không có màu sắc</span>
                                }
                            </td>
                            <td>
                                @if (sanPham.KichCo != null && sanPham.KichCo.Any())
                                {
                                    @string.Join(", ", sanPham.KichCo)
                                }
                                else
                                {
                                    <span>Không có kích cỡ</span>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">Không có sản phẩm nào.</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="details-card">
            <hr />
            <dl class="row">
                <dt class="col-sm-2">Tổng Tiền Hàng</dt>
                <dd class="col-sm-10">@Model.DonGia.ToString("N0")</dd>

                <dt class="col-sm-2">Giảm Giá</dt>
                <dd class="col-sm-10">@Model.GiamGia</dd>

                <dt class="col-sm-2">Phí Vận Chuyển</dt>
                <dd class="col-sm-10">@Model.PhiVanChuyen</dd>

                <dt class="col-sm-2">Tổng Tiền</dt>
                <dd class="col-sm-10">@Model.TongTien.ToString("N0")</dd>
            </dl>
        </div>

        <a asp-action="Index" class="btn btn-primary">Quay lại danh sách</a>
    </div>
</div>

<div class="modal fade" id="createPaymentHistoryModal" tabindex="-1" aria-labelledby="createPaymentHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác Nhận Thanh Toán</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="CreateLichSuThanhToan" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">Tổng Tiền Hóa Đơn</label>
                        <input type="text" class="form-control" value="@String.Format("{0:N0}", Model.TongTien).Replace(",", ".")" readonly id="totalAmount" />
                    </div>
                    <div class="form-group">
                        <label asp-for="LichSuThanhToans.FirstOrDefault().SoTien" class="control-label" style="margin-bottom:2px">Số Tiền</label>
                        <input asp-for="LichSuThanhToans.FirstOrDefault().SoTien" class="form-control" type="text" required id="amountPaid"
                               value="@String.Format("{0:N0}", Model.TongTien).Replace(",", ".")" oninput="formatInput(this)" />
                        <span asp-validation-for="LichSuThanhToans.FirstOrDefault().SoTien" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="LichSuThanhToans.FirstOrDefault().TienThua" class="control-label" style="margin-bottom:2px">Tiền Thừa</label>
                        <input asp-for="LichSuThanhToans.FirstOrDefault().TienThua" class="form-control" type="text" required id="change" readonly value="0" />
                        <span asp-validation-for="LichSuThanhToans.FirstOrDefault().TienThua" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label" style="margin-bottom:2px">Hình Thức Thanh Toán</label>
                        <div>
                            <div class="form-check">
                                <input asp-for="LichSuThanhToans.FirstOrDefault().HinhThucThanhToan" type="radio" value="Chuyển Khoản" class="form-check-input" id="chuyenKhoan" required />
                                <label class="form-check-label" for="chuyenKhoan">Chuyển Khoản</label>
                            </div>
                            <div class="form-check">
                                <input asp-for="LichSuThanhToans.FirstOrDefault().HinhThucThanhToan" type="radio" value="Tiền Mặt" class="form-check-input" id="tienMat" required />
                                <label class="form-check-label" for="tienMat">Tiền Mặt</label>
                            </div>
                        </div>
                        <span asp-validation-for="LichSuThanhToans.FirstOrDefault().HinhThucThanhToan" class="text-danger"></span>
                    </div>

                    <input type="hidden" asp-for="IdHoaDon" value="@Model.HoaDon.IdHoaDon" />

                    <div class="form-group" style="margin-top: 10px; text-align:center">
                        <input type="submit" value="Tạo mới" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="reasonModal" tabindex="-1" aria-labelledby="reasonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reasonModalLabel">Nhập Lý Do</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="UpdateInvoiceStatus" asp-route-id="@Model.HoaDon.IdHoaDon" method="post">
                    <div class="mb-3">
                        <label for="reason" class="form-label">Lý Do</label>
                        <input type="text" class="form-control" id="reason" name="reason" required placeholder="Nhập lý do" />
                    </div>
                    <input type="hidden" name="actionType" value="quayLai" />
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Xác Nhận Quay Lại</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function formatInput(input) {
        let value = input.value.replace(/[^0-9,]/g, '');
        value = value.replace(/,/g, '.');

        if (value) {
            let parts = value.split('.');
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            input.value = parts.join('.');
        } else {
            input.value = '';
        }

        calculateChange();
    }

    function calculateChange() {
        const totalAmount = parseFloat(document.getElementById('totalAmount').value.replace(/,/g, '').replace('.', '')) || 0;
        const amountPaid = parseFloat(document.getElementById('amountPaid').value.replace(/,/g, '').replace('.', '')) || 0;
        const change = amountPaid - totalAmount;

        document.getElementById('change').value = change >= 0 ? change.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 }) : '0';
    }
    function confirmAction() {
        return confirm("Bạn có chắc chắn muốn thực hiện hành động này?");
    }
</script>